spring.application.name=kinesisFlow
server.port=8080

# Kafka Configuration
spring.kafka.bootstrap-servers=15.188.239.44:9094

spring.data.redis.host=valkey.icefm3.ng.0001.euw3.cache.amazonaws.com
spring.data.redis.port=6379

spring.profiles.active=aws


# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect


spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer



spring.kafka.consumer.properties.spring.json.value.default.type=org.example.kinesisflow.record.CryptoEvent

spring.kafka.consumer.properties.spring.json.trusted.packages=org.example.kinesisflow.record

spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.consumer.group-id=kinesis-group

SECRET = "5367566859703373367639792F423F452848284\D6251655468576D5A71347437"

spring.flyway.enabled=true

logging.level.root=INFO
