spring.application.name=kinesisFlow

# Kafka Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.value.default.type=org.example.kinesisflow.record.CryptoEvent
spring.kafka.consumer.properties.spring.json.trusted.packages=org.example.kinesisflow.record
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.consumer.group-id=kinesis-group

# Database Configuration
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Flyway
spring.flyway.enabled=true

# Actuator
management.endpoints.web.exposure.include=health,prometheus
management.metrics.tags.application=${spring.application.name}
