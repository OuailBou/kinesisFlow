<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d483ce6d-440c-4168-a45c-3ac57b477076" name="Changes" comment="added a postgresql on docker compose &amp;&amp; added an alert table, and a controller">
      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/kinesisflow/controller/SimulatedDataProducer.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/kinesisflow/dto/AlertDTO.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/kinesisflow/mapper/AlertMapper.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/test/java/org/example/kinesisflow/AlertControllerIntegrationTest.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/test/java/org/example/kinesisflow/KafkaProducerConsumerIntegrationTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/infrastructure/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/infrastructure/docker-compose.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/kinesisflow/KinesisFlowApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/kinesisflow/KinesisFlowApplication.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/kinesisflow/config/KafkaConsumerConfig.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/kinesisflow/config/KafkaProducerConfig.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/kinesisflow/controller/AlertController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/kinesisflow/controller/AlertController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/kinesisflow/controller/IngestController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/kinesisflow/controller/IngestController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/kinesisflow/model/Alert.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/kinesisflow/model/Alert.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/kinesisflow/record/cryptoEvent.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/kinesisflow/record/cryptoEvent.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/kinesisflow/service/KafkaConsumerService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/kinesisflow/service/KafkaConsumerService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/kinesisflow/service/KafkaProducerService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/kinesisflow/service/KafkaProducerService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/application.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/org/example/kinesisflow/KinesisFlowApplicationTests.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/org/example/kinesisflow/KinesisFlowApplicationTests.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;OuailBou&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/OuailBou/kinesisFlow.git&quot;,
    &quot;accountId&quot;: &quot;24272a65-7605-4a2e-bb37-b4874f174b1a&quot;
  }
}</component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="mavenHomeTypeForPersistence" value="WRAPPER" />
      </MavenGeneralSettings>
    </option>
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2zEZ0UaMCzxANEkxd1tYzanHPmY" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Application.KinesisFlowApplication.executor": "Run",
    "Docker.infrastructure.kafka-ui: Compose Deployment.executor": "Run",
    "Docker.infrastructure.kafka: Compose Deployment.executor": "Run",
    "Docker.infrastructure.postgres: Compose Deployment.executor": "Run",
    "Docker.infrastructure.zookeeper: Compose Deployment.executor": "Run",
    "Docker.infrastructure: Compose Deployment.executor": "Run",
    "JUnit.AlertControllerIntegrationTest.executor": "Run",
    "JUnit.AlertCreationIntegrationTest.executor": "Run",
    "JUnit.AlertServiceTest.executor": "Run",
    "JUnit.KafkaFlowIntegrationTest.executor": "Run",
    "JUnit.KafkaProducerConsumerIntegrationTest.executor": "Run",
    "JUnit.KafkaProducerExampleApplicationTests.executor": "Run",
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "RequestMappingsPanelOrder0": "0",
    "RequestMappingsPanelOrder1": "1",
    "RequestMappingsPanelWidth0": "75",
    "RequestMappingsPanelWidth1": "75",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "Spring Boot.KinesisFlowApplication.executor": "Run",
    "git-widget-placeholder": "main",
    "ignore.virus.scanning.warn.message": "true",
    "last_directory_selection": "C:/Users/Ouail/Documents/proyectos/kinesisFlow/src/test/java",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "onboarding.tips.debug.path": "C:/Users/Ouail/Documents/KinesisFlow/KinesisFlow/src/main/java/org/example/Main.java",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Ouail\Documents\proyectos\kinesisFlow\src\main\resources" />
    </key>
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="org.example.kinesisflow" />
    </key>
  </component>
  <component name="RunManager" selected="Spring Boot.KinesisFlowApplication">
    <configuration name="AlertControllerIntegrationTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="kinesisFlow" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.kinesisflow.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.example.kinesisflow" />
      <option name="MAIN_CLASS_NAME" value="org.example.kinesisflow.AlertControllerIntegrationTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="KafkaProducerConsumerIntegrationTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="kinesisFlow" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.kinesisflow.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.example.kinesisflow" />
      <option name="MAIN_CLASS_NAME" value="org.example.kinesisflow.KafkaProducerConsumerIntegrationTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="KinesisFlowApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <option name="FRAME_DEACTIVATION_UPDATE_POLICY" value="UpdateClassesAndResources" />
      <module name="kinesisFlow" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="org.example.kinesisflow.KinesisFlowApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="infrastructure: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="infrastructure/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.KafkaProducerConsumerIntegrationTest" />
        <item itemvalue="Docker.infrastructure: Compose Deployment" />
        <item itemvalue="JUnit.AlertControllerIntegrationTest" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-fbdcb00ec9e3-intellij.indexing.shared.core-IU-251.25410.129" />
        <option value="bundled-js-predefined-d6986cc7102b-6a121458b545-JavaScript-IU-251.25410.129" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="d483ce6d-440c-4168-a45c-3ac57b477076" name="Changes" comment="" />
      <created>1751297972185</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1751297972185</updated>
      <workItem from="1751297973621" duration="285000" />
      <workItem from="1751301696420" duration="1776000" />
      <workItem from="1751364400961" duration="16303000" />
      <workItem from="1751451438438" duration="16324000" />
      <workItem from="1751473523169" duration="14246000" />
    </task>
    <task id="LOCAL-00001" summary="created docker compose for kafka + tested creating a topic">
      <option name="closed" value="true" />
      <created>1751303916219</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1751303916219</updated>
    </task>
    <task id="LOCAL-00002" summary="implemented serialization and desarialization of both the consumer and the producer- &amp;&amp; added a service and a controller layer, the controller has a post handler that acts as a producer">
      <option name="closed" value="true" />
      <created>1751373945911</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1751373945911</updated>
    </task>
    <task id="LOCAL-00003" summary="added a postgresql on docker compose &amp;&amp; added an alert table, and a controller">
      <option name="closed" value="true" />
      <created>1751386065019</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1751386065019</updated>
    </task>
    <option name="localTasksCounter" value="4" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="created docker compose for kafka + tested creating a topic" />
    <MESSAGE value="implemented serialization and desarialization of both the consumer and the producer- &amp;&amp; added a service and a controller layer, the controller has a post handler that acts as a producer" />
    <MESSAGE value="added a postgresql on docker compose &amp;&amp; added an alert table, and a controller" />
    <option name="LAST_COMMIT_MESSAGE" value="added a postgresql on docker compose &amp;&amp; added an alert table, and a controller" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/Main.java</url>
          <line>13</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>